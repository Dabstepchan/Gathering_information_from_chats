version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: tg-bot-app
        container_name: tg-bot-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - main
        depends_on:
            - db

    webserver:
        image: nginx:alpine
        container_name: tg-bot-nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - main
        depends_on:
            - app

    # Ngrok туннель для внешнего доступа
    #  ngrok:
    #    image: ngrok/ngrok:latest
    #    container_name: tg-bot-ngrok
    #    restart: unless-stopped
    #    ports:
    #      - "4040:4040"
    #    command: http host.docker.internal:80 --authtoken=${NGROK_AUTHTOKEN} --log=stdout
    #    environment:
    #      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    #    network_mode: host

    # MySQL база данных
    db:
        image: mysql:8.2
        container_name: tg-bot-mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
        volumes:
            - mysql_data:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
        ports:
            - "127.0.0.1:3306:3306"
        networks:
            - main

    # Автоматическая настройка webhook
    webhook-setup:
        image: alpine:latest
        container_name: tg-bot-webhook-setup
        restart: "no"
        depends_on:
            - app
            - webserver
            - db
        networks:
            - main
        volumes:
            - ./:/app
        working_dir: /app
        command: sh -c "apk add --no-cache curl mysql-client && ./setup-webhook.sh"

networks:
    main:
        driver: bridge

volumes:
    mysql_data:
        driver: local
